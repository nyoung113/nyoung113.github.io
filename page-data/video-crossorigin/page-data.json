{"componentChunkName":"component---src-templates-blog-post-js","path":"/video-crossorigin/","result":{"data":{"site":{"siteMetadata":{"title":"naeill's Blog"}},"markdownRemark":{"id":"17c30c86-597e-5646-b88b-8094f3e5d0cf","excerpt":"비디오 플레이어를 만드는 작업 중,  타임라인의 이미지를 가져와 화면에 blob이미지로 표시해주는 기능을 만들다\ntainted canvases may not be exported.라는 에러를 마주했다.\n이 에러는 CORS 에러로, 교차 출처 시 일어나는 것이었다. HTML…","html":"<p>비디오 플레이어를 만드는 작업 중,  타임라인의 이미지를 가져와 화면에 blob이미지로 표시해주는 기능을 만들다\ntainted canvases may not be exported.라는 에러를 마주했다.\n이 에러는 CORS 에러로, 교차 출처 시 일어나는 것이었다.</p>\n<p>HTML은 crossorigin 속성은 제공하기 때문에, 적절한 CORS 헤더와 이미지를 결합하면 외부 출처에서 로드된 요소로 정의된 이미지를 현재 출처에서 로드한 것처럼 캔버스에서 사용할 수 있다.</p>\n<h2>보안과 오염된(taint) 캔버스</h2>\n<p>캔버스의 비트맵은 다양한 소스에서 올 수 있다. 다른 출처의 이미지와 비디오를 포함해서, 따라서 보안 문제가 불거질 수 있다는 것은 당연하다.</p>\n<p>캔버스에서 어떤 데이터를 CORS 없이 그리자마자, 캔버스는 그 즉시 오염된다. 오염된 캔버스는 더이상 안전하다고 생각되지 않고, 캔버스 이미지를 다시 추출하려고 하면, exception이 던져진다. (에러가 발생한다)</p>\n<p>만약 외부의 컨텐츠가 HTML의 <img /> 이거나<code class=\"language-text\">&lt;svg</code> /> 라면, 캔버스의 컨텐츠를 열람하는 것은 허용되지 않는다.</p>\n<p>만약 외부 컨텐츠가 다른 HTMLCanvasElement이거나 ImageBitMap이라면, 그리고 이미지 소스가 same-origin-rules에 부합하지 않는다면 캔버스 컨텐츠를 읽는 것은 막힐 것이다.</p>\n<p>캔버스의</p>\n<ul>\n<li>Calling <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\" title=\"getImageData()\"><code class=\"language-text\">getImageData()</code></a> on the canvas's context</li>\n<li>Calling <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob\" title=\"toBlob()\"><code class=\"language-text\">toBlob()</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\" title=\"toDataURL()\"><code class=\"language-text\">toDataURL()</code></a> or <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/captureStream\" title=\"captureStream()\"><code class=\"language-text\">captureStream()</code></a> on the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas\"><code class=\"language-text\">&lt;canvas></code></a> element itself</li>\n</ul>\n<p>이런 메서드는 바로 SecurityError 예외처리된다.\n이는 사용자가 이미지를 사용해 원격 웹사이트에서 무단으로 정보를 가져와 개인 데이터가 노출되는 것을 방지할 수 있다.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\">https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image</a></p>\n<p>나같은 경우엔 외부 URL의 비디오를 샘플 비디오로 하고 개발하고 있었기 때문에, 당연히 CORS 에러가 날 수 밖에 없었다.</p>\n<p>따라서 개발 시 클라이언트 측에서는 해당이미지의 crossOrigin 속성을 anonymous 로 변경해주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>video  \n    src<span class=\"token operator\">=</span><span class=\"token string\">\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"</span>  \n    className<span class=\"token operator\">=</span><span class=\"token string\">'w-screen h-screen'</span>  \n    ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>videoRef<span class=\"token punctuation\">}</span>  \n    autoPlay<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>  \n    onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">togglePlay</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>  \n    crossOrigin<span class=\"token operator\">=</span><span class=\"token string\">\"anonymous\"</span> \n<span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">captureFrame</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">timestampSec</span> <span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>  \n  \n    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token operator\">&lt;</span>string <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>  \n       <span class=\"token keyword\">const</span> copiedVideo <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n       <span class=\"token keyword\">const</span> video <span class=\"token operator\">=</span> videoRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>  \n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n           video<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> timestampSec<span class=\"token punctuation\">;</span>  \n           <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n           canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> video<span class=\"token punctuation\">.</span>videoWidth<span class=\"token punctuation\">;</span>  \n           canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> video<span class=\"token punctuation\">.</span>videoHeight<span class=\"token punctuation\">;</span>  \n           <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span>  \n           <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n               <span class=\"token comment\">// NOTE: crossOrigin 설정 안할 때에는 Canvas 오염됨  </span>\n               ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n               canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toBlob</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">blob</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>  \n                   <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> blob <span class=\"token operator\">?</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>  \n                   <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n               <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n           <span class=\"token punctuation\">}</span>  \n       <span class=\"token punctuation\">}</span>  \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token function\">setFrameImgSrc</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"making video player","date":"January 14, 2024","description":"tainted canvases may not be exported 에러 해결하기"}},"previous":{"fields":{"slug":"/starting-own-blog/"},"frontmatter":{"title":"깃허브 블로그 시작"}},"next":null},"pageContext":{"id":"17c30c86-597e-5646-b88b-8094f3e5d0cf","previousPostId":"5c3cee9e-ac25-564e-bd56-827690e5c9ed","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}